<?php
/**
 * @var string $column
 * @var string $fieldMethod
 * @var string $returnSelf
 * @var bool $canBeNull
 * @var array $comparatorsIn
 */
?>
/** @return <?php echo $returnSelf;?> */
public static function <?php echo $fieldMethod;?>Equal(string $value) {
    return static::stringEqual('<?php echo $column;?>', $value);
}
/** @return <?php echo $returnSelf;?> */
public static function <?php echo $fieldMethod;?>Not(string $value) {
    return static::stringNot('<?php echo $column;?>', $value);
}
/** @return <?php echo $returnSelf;?> */
public static function <?php echo $fieldMethod;?>Like(string $value) {
    return static::stringLike('<?php echo $column;?>', $value);
}
/** @return <?php echo $returnSelf;?> */
public static function <?php echo $fieldMethod;?>NotLike(string $value) {
    return static::stringNotLike('<?php echo $column;?>', $value);
}
/** @return <?php echo $returnSelf;?> */
public static function <?php echo $fieldMethod;?>BeginsLike(string $value) {
    return static::stringBeginsLike('<?php echo $column;?>', $value);
}
/** @return <?php echo $returnSelf;?> */
public static function <?php echo $fieldMethod;?>NotBeginsLike(string $value) {
    return static::stringNotBeginsLike('<?php echo $column;?>', $value);
}
/** @return <?php echo $returnSelf;?> */
public static function <?php echo $fieldMethod;?>EndsLike(string $value) {
    return static::stringEndsLike('<?php echo $column;?>', $value);
}
/** @return <?php echo $returnSelf;?> */
public static function <?php echo $fieldMethod;?>NotEndsLike(string $value) {
    return static::stringNotEndsLike('<?php echo $column;?>', $value);
}
/** @return <?php echo $returnSelf;?> */
public static function <?php echo $fieldMethod;?>In(array $values) {
    return static::stringIn('<?php echo $column;?>', $values);
}
/** @return <?php echo $returnSelf;?> */
public static function <?php echo $fieldMethod;?>NotIn(array $values) {
    return static::stringNotIn('<?php echo $column;?>', $values);
}
<?php if($canBeNull): ?>
/** @return <?php echo $returnSelf;?> */
public static function <?php echo $fieldMethod;?>IsNull() {
    return static::isNull('<?php echo $column;?>');
}
/** @return <?php echo $returnSelf;?> */
public static function <?php echo $fieldMethod;?>IsNotNull() {
    return static::isNotNull('<?php echo $column;?>');
}
<?php endif; ?>

<?php foreach ($comparatorsIn as $comparatorName => $options): ?>
<?php
    $c = count($options);
    if ($c === 0) {
        continue;
    }

    $singleMode = false;
    if ($c === 1) {
        $singleMode = true;
        $optionsText = "'" .implode("','", $options) . "'";

    } else {
        $optionsText = "['" .implode("','", $options) . "']";
    }
?>
public static function <?php echo $fieldMethod;?>Is<?php echo ucfirst($comparatorName);?>() {
    <?php if ($singleMode): ?>
        return static::stringEqual('<?php echo $column;?>', <?php echo $optionsText; ?>);
    <?php else: ?>
        return static::stringIn('<?php echo $column;?>', <?php echo $optionsText; ?>);
    <?php endif; ?>
}
public static function <?php echo $fieldMethod;?>IsNot<?php echo ucfirst($comparatorName);?>() {
    <?php if ($singleMode): ?>
        return static::stringNot('<?php echo $column;?>', <?php echo $optionsText; ?>);
    <?php else: ?>
        return static::stringNotIn('<?php echo $column;?>', <?php echo $optionsText; ?>);
    <?php endif; ?>
}
<?php endforeach; ?>